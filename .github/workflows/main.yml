name: workflow

on:
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip # jq and unzip are installed, ensure they are needed for other parts of your workflow if not directly used here.

      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.CR_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ secrets.CR_LOGIN_SERVER }}/my_app:${{ github.sha }}
          docker push ${{ secrets.CR_LOGIN_SERVER }}/my_app:${{ github.sha }}

  deploy:
    name: Continuous Deployment
    needs: build-and-push-image
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set image tag
        id: vars
        run: echo "IMAGE=${{ secrets.CR_LOGIN_SERVER }}/my_app:${{ github.sha }}" >> "$GITHUB_ENV"

      - name: Deploy Docker Image to Azure VM via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: azureuser
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            echo "Logging into ACR..."
            az acr login --name ${{ secrets.ACR_NAME }} --identity

            echo "Running deployment script..."
            bash ~/deploy_container.sh "$IMAGE"
